#1. Write a Python function that takes a sequence of numbers and determines whether all the numbers are different from each other.
""" def test_distinct(data):
       if len(data) == len(set(data)):
         return True
       else:
         return False;
 print(test_distinct([1,5,7,9]))
 print(test_distinct([2,4,5,5,7,9])) """
#2. Write a Python program to create all possible strings by using 'a', 'e', 'i', 'o', 'u'. Use the characters exactly once.
""" import random
 char_list = ['a','e','i','o','u']
 random.shuffle(char_list)
 print(''.join(char_list)) """
#3. Write a Python program to remove and print every third number from a list of numbers until the list becomes empty.
""" def remove_nums(int_list):
   position = 3 - 1                           #(#list starts with 0 index)
   idx = 0
   len_list = (len(int_list))
   while len_list>0:
     idx = (position+idx)%len_list
     print(int_list.pop(idx))                  #(Python list pop() is an inbuilt function in Python that removes and returns the last value from the List or the given index value. )
     len_list -= 1
 nums = [10,20,30,40,50,60,70,80,90]
 remove_nums(nums) """
#5. Write a Python program to create the combinations of 3 digit combo
""" numbers = []
 for num in range(1000):
   num=str(num).zfill(3)
 print(num)
 numbers.append(num) """
#6. Write a Python program to print a long text, convert the string to a list and print all the words and their frequencies.
""" string_words = '''India Republic Day is celebrated on 26 January every year. It was 1950 when Dr. Rajendra Prasad our first president hoisted the tricolor on Rajpath, Delhi. Our first chief guest was the President of Indonesia, Mr. Sukarno. Similarly, in 2021 Boris Johnson, Prime Minister of the United Kingdom was invited as a guest of honor but the planning has been recently canceled due to the corona crisis. Every year we invite various famous personalities to be a part of our celebration.
 We have been celebrating this occasion since the year 1950 and it has been declared a national holiday. We celebrate this day because we got our constitution on this day. It took 2 years, 11 months, and 18 days to make our constitution and was completed by 26 November 1949. We also celebrate 26 November as our Constitution day. On 26 January 1950, it was announced to enforce our Constitution for the first time.
 We celebrate this occasion with great enthusiasm and Delhi is the center of the Republic Day celebration. India will celebrate its 73rd Republic Day in the year 2022. The cultural programs will be fewer in number and protocols for COVID-19 will be followed strictly.
 The programme on Rajpath includes a small Parade by various armed forces that will be fewer in number. Children under the age of 15 are strictly prohibited to attend the ceremony. People every year visit Delhi to see this programme but this year only a few spectators are allowed to watch the event to avoid overcrowding amid the pandemic. We can also watch the live telecast of the programme on the national channel Doordarshan.
 Generally, schools also celebrate this occasion and organize various programmes. People all over India celebrate this event by hoisting the flag and distributing sweets. Sometimes they also wear tricolors and play patriotic songs and enjoy their day. This year the republic day celebration will be done in the pandemic situation and therefore the way of celebrating the event is changed. It is necessary to remain safe rather than taking risks.'''
 word_list = string_words.split()
 word_freq = [word_list.count(n) for n in word_list]
 print("String:\n {} \n".format(string_words))
 print("List:\n {} \n".format(str(word_list)))
 print("Pairs (Words and Frequencies:\n {}".format(str(list(zip(word_list, word_freq))))) """
#7. Write a Python program to count the number of each character of a given text of a text file.
""" import collections
 import pprint
 file_input = input('File Name: ')
 with open(file_input, 'r') as info:
   count = collections.Counter(info.read().upper())
   value = pprint.pformat(count)
 print(value) """
# 9. Write a Python program to get a list of locally installed Python modules.
""" import pkg_resources
 installed_packages = pkg_resources.working_set
 installed_packages_list = sorted(["%s==%s" % (i.key, i.version)
      for i in installed_packages])
 for m in installed_packages_list:
     print(m) """
#10. Write a Python program to display some information about the OS where the script is running.
""" import platform as pl
 os_profile = [
         'machine',
         'node',
         'platform',
         'processor',
         'python_build',
         'python_compiler',
         'python_version',
         'system',
         'uname',
         'version',
     ]
 for key in os_profile:
   if hasattr(pl, key):
     print(key +  ": " + str(getattr(pl, key)()))             #(The getattr() function returns the value of the specified attribute from the specified object.) """
#14. Write a Python program to add two positive integers without using the '+' operator. Go to the editor
#Note: Use bit wise operations to add two numbers.
""" def Add(x, y):
     while (y != 0):
         carry = x & y
         x = x ^ y
         y = carry << 1
     return x
 print(Add(156, 32)) """
#15. Write a Python program to check the priority of the four operators (+, -, *, /).
""" from collections import deque
 import re
 __operators__ = "+-/*"
 __parenthesis__ = "()"
 __priority__ = {
     '+': 0,
     '-': 0,
     '*': 1,
     '/': 1,
 }
 def test_higher_priority(operator1, operator2):
     return __priority__[operator1] >= __priority__[operator2]
 print(test_higher_priority('*','-'))
 print(test_higher_priority('+','-'))
 print(test_higher_priority('+','*'))
 print(test_higher_priority('+','/'))
 print(test_higher_priority('*','/')) """
# 16. Write a Python program to get the third side of right angled triangle from two given sides.
""" def pythagoras(opposite_side,adjacent_side,hypotenuse):
         if opposite_side == str("x"):
             return ("Opposite = " + str(((hypotenuse**2) - (adjacent_side**2))**0.5))
         elif adjacent_side == str("x"):
             return ("Adjacent = " + str(((hypotenuse**2) - (opposite_side**2))**0.5))
         elif hypotenuse == str("x"):
             return ("Hypotenuse = " + str(((opposite_side**2) + (adjacent_side**2))**0.5))
         else:
             return "You know the answer!"
 print(pythagoras(3,4,'x'))
 print(pythagoras(3,'x',5))
 print(pythagoras('x',4,5))
 print(pythagoras(3,4,5)) """
# 18. Write a Python program to find the median among three given numbers
""" x = input("Input the first number ")
 y = input("Input the second number ")
 z = input("Input the third number ")
 print("Median of the above three numbers -")
 if y < x and x < z:
     print(x)
 elif z < x and x < y:
     print(x)
     elif z < y and y < x:
     print(y)
 elif x < y and y < z:
     print(y)
 elif y < z and z < x:
     print(z)
 elif x < z and z < y:
     print(z) " " "

19." " "num = "248163264"
tempn , i ,n = 2, 2, 2
ans = True
while ans:
    if str(tempn) in num:
      i += 1
      tempn = pow(n, i)
    else:
      ans = False

print(i-1)" " "

 20.. # 20. Write a Python program to find the number of zeros at the end of a factorial of a given positive number.
#Range of the number(n): (1 <= n <= 2*109).

"""def factendzero(n):
  x = n // 5
  y = x 
  while x > 0:
    x /= 5
    y += int(x)
  return y
       
print(factendzero(5))
print(factendzero(15))
print(factendzero(100))"""

#21. Write a Python program to find the number of notes (Sample of notes: 10, 20, 50, 100, 200 and 500 ) against a given amount. Go to the editor
#Range - Number of notes(n) : n (1 <= n <= 1000000).

"""def no_notes(a):
  Q = [500, 200, 100, 50, 20, 10]
  x = 0
  for i in range(6):
    q = Q[i]
    x += int(a / q)
    a = int(a % q)
  if a > 0:
    x = -1
  return x
print(no_notes(880))
print(no_notes(1000))"""

#22.Write a Python program to create a sequence where the first four members of the sequence are equal to one, and each successive term of the sequence is equal to the sum of the four previous ones. Find the Nth member of the sequence.
"""def new_seq(n):
    if n==1 or n==2 or n==3 or n==4:
        return 1
    return new_seq(n-1) + new_seq(n-2) + new_seq(n-3) + new_seq(n-4)
print(new_seq(5))
print(new_seq(6))
print(new_seq(7))"""

#23.Write a Python program that accept a positive number and subtract from this number the sum of its digits and so on. Continues this operation until the number is positive. 
"""n = int(input("Enter a no: "))
count = 0

for i in range(1,n):
    if n%i==0:
        count +=1

print(count+1)"""
#24. Write a Python program to find the number of divisors of a given integer is even or odd.

"""simple_no = "0123456"
p_no = input("Enter your phone no: ")
result = []

for i in a_no:
    if str(i) in simpleno:
        continue
    else:
        result.append(i)

print("your no. does not contain ", result ,"no")"""

# 25. Write a Python program to find the digits which are absent in a given mobile number.
"""simple_no = "0123456"
p_no = input("Enter your phone no: ")
result = []

for i in a_no:
    if str(i) in simpleno:
        continue
    else:
        result.append(i)

print("your no. does not contain ", result ,"no")"""

# 26.  Write a Python program to compute the summation of the absolute difference of all distinct pairs in a given array (non-decreasing order)

"""array = [1,4,5]

a = abs(array[0]-array[1])
c = abs(array[0]-array[2])
b = abs(array[1]-array[2])

print("summation of the absolute difference is ", a+b+c)"""

# 27.  Write a Python program to find the type of the progression (arithmetic progression/geometric progression) and the next successive member of a given three successive members of a sequence. Go to the editor
#According to Wikipedia, an arithmetic progression (AP) is a sequence of numbers such that the difference of any two successive members of the sequence is a constant. For instance, the sequence 3, 5, 7, 9, 11, 13, . . . is an arithmetic progression with common difference 2. For this problem, we will limit ourselves to arithmetic progression whose common difference is a non-zero integer.
#On the other hand, a geometric progression (GP) is a sequence of numbers where each term after the first is found by multiplying the previous one by a fixed non-zero number called the common ratio. For example, the sequence 2, 6, 18, 54, . . . is a geometric progression with common ratio 3. For this problem, we will limit ourselves to geometric progression whose common ratio is a non-zero integer.
"""a =[2,6,18]

if a[1]-a[0]==a[2]-a[1]:
    diff = a[1]-a[0]
    no = diff + a[2]
    print("its a AP series next no will be. " , no)

elif (a[1]/a[0]==a[2]/a[1] ):
    diff = a[1]/a[0]
    no = diff*a[2]
    print("its a GP series next no will be. " , no)"""

#28.Write a Python program to print the length of the series and the series from the given 3rd term, 3rd last term and the sum of a series.
"""n = int(input("Enter a no. :"))
while True:
    k = str(n)
    if k == k[::-1]:
      break
    else:
      m = int(k[::-1])
      n += m
print(n)"""

#29. Write a Python program to find common divisors between two numbers in a given pair.

#30.Write a Python program to reverse the digits of a given number and add it to the original, If the sum is not a palindrome repeat this procedure.
"""n = int(input("Enter a no. :"))
while True:
    k = str(n)
    if k == k[::-1]:
      break
    else:
      m = int(k[::-1])
      n += m
print(n)"""

#31.Write a Python program to count the number of carry operations for each of a set of addition problems. Go to the editor
#According to Wikipedia " In elementary arithmetic, a carry is a digit that is transferred from one column of digits to another column of more significant digits. It is part of the standard algorithm to add numbers together by starting with the rightmost digits and working to the left. For example, when 6 and 7 are added to make 13, the "3" is written to the same column and the "1" is carried to the left".
"""no1 = int(input("Enter the first no. : "))
no2 = int(input("Enter the second no. : "))

l1 = str(no1)
l2 = str(no2)

count = 0

for i in range(len(l1),0,-1):
    integer1 = int(l1[i-1])
    integer2 = int(l2[i-1])
    sum = integer1+integer2
    if sum > 9:
        count +=1 

print(count)"""

32
"""print("Input the heights of eight buildings:")
l = [int(input()) for i in range(8)]
l.sort(reverse = True)
print(l[:3])"""

33


"""no1 = int(input("Enter teh first no. : "))
no2 = int(input("Enter teh second no. : "))

print(len(str(no1+no2)))

34
h = int(input("Enter the longest side : "))
b = int(input("Enter the another side : "))
s = int(input("Enter the another side : "))

if (s**2 + b**2 == h**2):
    print("Its a right angle triangle.")
else:
    print("Its not right angle triangle.")"""

35

"""print("Input the value of a, b, c, d, e, f:")
a, b, c, d, e, f = map(float, input().split())
n = a*e - b*d
print("Values of x and y:")
if n != 0:
    x = (c*e - b*f) / n
    y = (a*f - c*d) / n
    print(x ,"\n",y)"""

36

37
"""n = int(input("Enter any no. : "))
result = 0

for i in range(10):
    for j in range(10):
        for k in range(10):
            if (i+j+k == n):
                result +=(0<=n-(i+j+k)<=9)

print(result)"""

38
"""num = int(input("Enter a no.: "))

count =0

# for i in range(n+1):
#     for j in range(i+1):
#         if (j % i == 0):"""

"""for j in range(num):
    for i in range(2,num):
        if (num % i) == 0:
           print()
        else:
            count +=1

print(count)"""


39
"""print("Input three coordinate of the circle:")
x1, y1, x2, y2, x3, y3 = map(float, input().split())
c = (x1-x2)**2 + (y1-y2)**2
a = (x2-x3)**2 + (y2-y3)**2
b = (x3-x1)**2 + (y3-y1)**2
s = 2*(a*b + b*c + c*a) - (a*a + b*b + c*c) 
px = (a*(b+c-a)*x1 + b*(c+a-b)*x2 + c*(a+b-c)*x3) / s
py = (a*(b+c-a)*y1 + b*(c+a-b)*y2 + c*(a+b-c)*y3) / s 
ar = a**0.5
br = b**0.5
cr = c**0.5 
r = ar*br*cr / ((ar+br+cr)*(-ar+br+cr)*(ar-br+cr)*(ar+br-cr))**0.5
print("Radius of the said circle:")
print("{:>.3f}".format(r))
print("Central coordinate (x, y) of the circle:")
print("{:>.3f}".format(px),"{:>.3f}".format(py))"""


40
"""print("Input x1,y1,x2,y2,x3,y3,xp,yp:")
x1,y1,x2,y2,x3,y3,xp,yp = map(float, input().split())
c1 = (x2-x1)*(yp-y1)-(y2-y1)*(xp-x1)
c2 = (x3-x2)*(yp-y2)-(y3-y2)*(xp-x2)
c3 = (x1-x3)*(yp-y3)-(y1-y3)*(xp-x3)
if (c1<0 and c2<0 and c3<0) or (c1>0 and c2>0 and c3>0):
    print("The point is in the triangle.")
else:
    print("The point is outside the triangle.")"""

41

42
"""print("Input six integers:")
nums = list(map(int, input().split()))
nums.sort()
nums.reverse()
print("After sorting the said integers:")
print(nums)"""


43
"""print("Input x1,y1,x2,y2,x3,y3,xp,yp:")
x1, y1,x2, y2, x3, y3, x4, y4 = map(float, input().split())
print('PQ and RS are parallel.' if abs((x2 - x1)*(y4 - y3) - (x4 - x3)*(y2 - y1)) < 1e-10 else 'PQ and RS are not parallel')"""

44

45

"""import math
print("Input x1, y1, r1, x2, y2, r2:")
x1,y1,r1,x2,y2,r2 = [float(i) for i in input().split()]
d = math.sqrt((x1-x2)**2 + (y1-y2)**2)
if d <= r1-r2:
    print("C2  is in C1")
elif d <= r2-r1:
    print("C1  is in C2")
elif d < r1+r2:
    print("Circumference of C1  and C2  intersect")
elif d == r1+r2:
    print("Circumference of C1 and C2 will touch")
else:
    print("C1 and C2  do not overlap")"""

46

"""from datetime import date
print("Input month and date (separated by a single space):")
m, d = map(int, input().split())
weeks = {1:'Monday',2:'Tuesday',3:'Wednesday',4:'Thursday',5:'Friday',6:'Saturday',7:'Sunday'}
w = date.isoweekday(date(2016, m, d))
print("Name of the date: ",weeks[w])"""

47

"""import collections
print("Input a text in a line.")
text_list = list(map(str, input().split()))
sc = collections.Counter(text_list)
common_word = sc.most_common()[0][0]
max_char = ""
for s in text_list:
    if len(max_char) < len(s):
        max_char = s
print("\nMost frequent text and the word which has the maximum number of letters.")
print(common_word, max_char)"""

48

49
"""a = float(input("Enter the side of parallelogram: "))
b = float(input("Enter the another side of parallelogram: "))
c = float(input("Enter dignol of parallelogram: "))

if c**2 == a**2+b**2 :
    print("This is a rectangle.")
elif a == b:
    print("This is a rhombus.")
else:
    print("not a rectangel or rhombus.")"""

50

"""text = str(input("Enter any text that include pytohn and Java in it. : "))
text = text.split()
for i in text:
    if i =="python":
        b = text.index(i)
        # print(b)
    elif i =="java":
        c = text.index(i)

text[b] = "java"
text[c] = "python"
print(text)"""

51

"""print("Input an integer created by 8 numbers from 0 to 9.:")
num = list(input())
print("Difference between the largest and the smallest integer from the given integer:")
print(int("".join(sorted(num,reverse=True))) - int("".join(sorted(num))))"""

52
"""n = int(input("Enter a number : "))
x = n
prime = []
sum = 0
c = 2
while n!=0:
  for i in range(2,c):
    if c%i==0:
      break
  else:
    sum +=c  
    prime.append(c)  
    n-=1
  c+=1  
print(f'first {x}, prime numbers are \n{prime}')
print(f'sum of all is {sum}')"""

53

54

"""print("Input number of straight lines (o to exit): ")
n=int(input())
print("Number of regions:") 
print((n*n+n+2)//2)"""

55
"""print("Input xp, yp, xq, yq, xr, yr, xs, ys:")

x_p, y_p, x_q, y_q, x_r, y_r, x_s, y_s = map(float, input().split())
pq_x, pq_y = x_q - x_p, y_q - y_p
rs_x, rs_y = x_s - x_r, y_s - y_r
rs = pq_x*rs_x + pq_y*rs_y


if abs(rs) > 1e-10:
    print("AB and CD are not orthogonal!")
else:
    print("AB and CD are orthogonal!")"""

56.
"""import re
string=input ("user input : ")
number=re.findall('\d+',string)
sum=0
for j in number:
    sum+=int(j)
print(sum)"""

